roles:
  dummy:
    echo ""
  linux_hosts: |
    PHOST=$(curl http://169.254.169.254/latest/meta-data/public-hostname)
    SHOST=$(curl -s http://169.254.169.254/latest/meta-data/public-hostname|awk -F '.' '{print $1}')
    PIPV4=$(ifconfig -a|grep -w inet|awk '{print $2}'|grep 192)

    HSET=0
    grep -i $PHOST /etc/hosts || HSET=1
    grep -i $PIPV4 /etc/hosts || HSET=1

    if [ $HSET -ne 0 ]; then
      echo "Hosts file not set! Updating"
      echo "${PIPV4} ${PHOST} ${SHOST}" >> /etc/hosts
    fi
    exit 0
  linux_resolv: |
    echo 'nameserver MASTERSERVER' > /etc/resolv.conf
  linux_install_agent: |
    curl -k https://master.inf.puppetlabs.demo:8140/packages/current/install.bash | sudo bash
  disable_selinux: |
    grep 'SELINUX\=disabled' /etc/selinux/config
    if [ $? -ne 0 ]; then
    echo '
    SELINUX=disabled
    SELINUXTYPE=targeted
    ' > /etc/selinux/config
    setenforce Permissive
    echo 'SELinux is now PERMISSIVE, but you need to reboot to fully disable'
    fi
    exit 0
  puppet_master: |
    cd /var/tmp
    curl -L -o puppet-enterpise-latest.tgz "https://pm.puppetlabs.com/cgi-bin/download.cgi?dist=el&rel=7&arch=x86_64&ver=latest"
    tar -zxvf puppet-enterpise-latest.tgz
    if [ -f /vagrant/answers.txt ]; then
      /var/tmp/puppet-enterprise-*/puppet-enterprise-installer -a /vagrant/answers.txt
    else
      echo "Role Puppet Master: Error - Answer file not present"
    fi
    exit 0
  windows_agent: |
    Set-DNSClientServerAddress -interfaceIndex 12 -ServerAddresses ('MASTERSERVER')
    Set-DNSClient -interfaceIndex 12 -ConnectionSpecificSuffix "pdx.puppetlabs.demo"
    $hostname = $env:computername.ToLower()
    ac -Encoding UTF8 C:\Windows\system32\drivers\etc\hosts "127.0.0.1 ${hostname}.pdx.puppetlabs.demo ${hostname}"

    mkdir C:/tmp
    # This script installs the windows puppet agent on the windows seteam vagrant vms
    # from the master's pe_repo by downloading it to C:\tmp first and then running
    # msiexec on it from there.

    $puppet_master_server = "master.inf.puppetlabs.demo"
    $msi_source = "https://${puppet_master_server}:8140/packages/current/windows-x86_64/puppet-agent-x64.msi"
    $msi_dest = "C:\tmp\puppet-agent-x64.msi"

    # Start the agent installation process and wait for it to end before continuing.
    Write-Host "Installing puppet agent from $msi_source"

    Function Get-WebPage { Param( $url, $file, [switch]$force)
      if($force) {
        [Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}
      }
      $webclient = New-Object system.net.webclient
      $webclient.DownloadFile($url,$file)
    }

    $certname = "${hostname}.pdx.puppetlabs.demo"
    Get-WebPage -url $msi_source -file $msi_dest -force
    $msiexec_path = "C:\Windows\System32\msiexec.exe"
    $msiexec_args = "/qn /log c:\log.txt /i $msi_dest PUPPET_MASTER_SERVER=$puppet_master_server PUPPET_AGENT_CERTNAME=$certname"
    $msiexec_proc = [System.Diagnostics.Process]::Start($msiexec_path, $msiexec_args)
    $msiexec_proc.WaitForExit()
